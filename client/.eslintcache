[{"E:\\nodejsproject\\client\\src\\index.js":"1","E:\\nodejsproject\\client\\src\\reportWebVitals.js":"2","E:\\nodejsproject\\client\\src\\App.js":"3","E:\\nodejsproject\\client\\src\\components\\layouts\\Navbar.js":"4","E:\\nodejsproject\\client\\src\\components\\layouts\\Landing.js":"5","E:\\nodejsproject\\client\\src\\components\\auth\\Login.js":"6","E:\\nodejsproject\\client\\src\\components\\auth\\Register.js":"7","E:\\nodejsproject\\client\\src\\store.js":"8","E:\\nodejsproject\\client\\src\\reducers\\index.js":"9","E:\\nodejsproject\\client\\src\\reducers\\alert.js":"10","E:\\nodejsproject\\client\\src\\actions\\types.js":"11","E:\\nodejsproject\\client\\src\\actions\\alert.js":"12","E:\\nodejsproject\\client\\src\\components\\layouts\\Alert.js":"13","E:\\nodejsproject\\client\\src\\actions\\auth.js":"14","E:\\nodejsproject\\client\\src\\reducers\\auth.js":"15","E:\\nodejsproject\\client\\src\\utills\\setAuthToken.js":"16","E:\\nodejsproject\\client\\src\\components\\dashboard\\Dashboard.js":"17","E:\\nodejsproject\\client\\src\\components\\routing\\PrivateRoute.js":"18","E:\\nodejsproject\\client\\src\\reducers\\profile.js":"19","E:\\nodejsproject\\client\\src\\actions\\profile.js":"20","E:\\nodejsproject\\client\\src\\components\\layouts\\Spinner.js":"21","E:\\nodejsproject\\client\\src\\components\\profile-files\\CreateProfile.js":"22"},{"size":435,"mtime":1610125440217,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":1651,"mtime":1610813751979,"results":"26","hashOfConfig":"24"},{"size":1227,"mtime":1610802105135,"results":"27","hashOfConfig":"24"},{"size":1087,"mtime":1610802820003,"results":"28","hashOfConfig":"24"},{"size":1918,"mtime":1610657201968,"results":"29","hashOfConfig":"24"},{"size":3423,"mtime":1610655867860,"results":"30","hashOfConfig":"24"},{"size":388,"mtime":1610125413400,"results":"31","hashOfConfig":"24"},{"size":205,"mtime":1610794076118,"results":"32","hashOfConfig":"24"},{"size":443,"mtime":1610131858826,"results":"33","hashOfConfig":"24"},{"size":519,"mtime":1610810708655,"results":"34","hashOfConfig":"24"},{"size":450,"mtime":1610131775975,"results":"35","hashOfConfig":"24"},{"size":482,"mtime":1610131141261,"results":"36","hashOfConfig":"24"},{"size":2983,"mtime":1610812522833,"results":"37","hashOfConfig":"24"},{"size":1474,"mtime":1610811000943,"results":"38","hashOfConfig":"24"},{"size":258,"mtime":1610508359770,"results":"39","hashOfConfig":"24"},{"size":1161,"mtime":1610812855257,"results":"40","hashOfConfig":"24"},{"size":590,"mtime":1610793858834,"results":"41","hashOfConfig":"24"},{"size":873,"mtime":1610811182611,"results":"42","hashOfConfig":"24"},{"size":588,"mtime":1610812271530,"results":"43","hashOfConfig":"24"},{"size":326,"mtime":1610803734083,"results":"44","hashOfConfig":"24"},{"size":6150,"mtime":1610814768524,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"zn2yw3",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},"E:\\nodejsproject\\client\\src\\index.js",[],["96","97"],"E:\\nodejsproject\\client\\src\\reportWebVitals.js",[],"E:\\nodejsproject\\client\\src\\App.js",[],"E:\\nodejsproject\\client\\src\\components\\layouts\\Navbar.js",[],"E:\\nodejsproject\\client\\src\\components\\layouts\\Landing.js",[],"E:\\nodejsproject\\client\\src\\components\\auth\\Login.js",[],"E:\\nodejsproject\\client\\src\\components\\auth\\Register.js",[],"E:\\nodejsproject\\client\\src\\store.js",[],"E:\\nodejsproject\\client\\src\\reducers\\index.js",[],"E:\\nodejsproject\\client\\src\\reducers\\alert.js",["98","99","100"],"import { SET_ALERT, REMOVE_ALERT, REGISTER_FAILED, REGISTER_SUCCESS } from '../actions/types';\r\nconst Initial_state = [];\r\n\r\nexport default alert = (state = Initial_state, action) => {\r\n    switch (action.type) {\r\n        case SET_ALERT:\r\n            return [...state, action.payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== action.payload.id);\r\n        default:\r\n            return state;\r\n    }\r\n}","E:\\nodejsproject\\client\\src\\actions\\types.js",[],"E:\\nodejsproject\\client\\src\\actions\\alert.js",[],"E:\\nodejsproject\\client\\src\\components\\layouts\\Alert.js",[],"E:\\nodejsproject\\client\\src\\actions\\auth.js",["101"],"import { REGISTER_FAILED, REGISTER_SUCCESS, LOGIN_SUCCESS, LOGIN_FAILED, USER_LOADED, AUTH_ERROR, LOGOUT, CLEAR_PROFILE, GET_PROFILE } from \"./types\";\r\nimport { setAlert } from \"./alert\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"../utills/setAuthToken\"\r\nconst register = ({ name, email, password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'Application/json'\r\n        }\r\n    }\r\n    const newUser = {\r\n        name,\r\n        email,\r\n        password\r\n    }\r\n    const body = JSON.stringify(newUser);\r\n    try {\r\n        const response = await axios.post('/api/user/register', body, config);\r\n        console.log(response);\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: response.data\r\n        })\r\n        dispatch(loadUser())\r\n\r\n    } catch (error) {\r\n        const errors = error.response.data.errors\r\n        let err = '';\r\n        if (error.response.data.error) {\r\n            err = error.response.data.error\r\n        }\r\n        if (errors) {\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg, 'danger'))\r\n            });\r\n        }\r\n        if (err && err !== '') {\r\n            dispatch(setAlert(err, 'danger'))\r\n        }\r\n        dispatch({\r\n            type: REGISTER_FAILED,\r\n        })\r\n    }\r\n}\r\nconst login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'Application/json'\r\n        }\r\n    }\r\n    const newUser = {\r\n        email,\r\n        password\r\n    }\r\n    const body = JSON.stringify(newUser);\r\n    try {\r\n        const response = await axios.post('/api/user/login', body, config);\r\n        console.log(response);\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: response.data\r\n        })\r\n\r\n        dispatch(loadUser)\r\n    } catch (error) {\r\n        const errors = error.response.data.errors\r\n        let err = '';\r\n        if (error.response.data.error) {\r\n            err = error.response.data.error\r\n        }\r\n        if (errors) {\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg, 'danger'))\r\n            });\r\n        }\r\n        if (err && err !== '') {\r\n            console.log(err)\r\n\r\n            dispatch(setAlert(err, 'danger'))\r\n        }\r\n        dispatch({\r\n            type: LOGIN_FAILED,\r\n        })\r\n    }\r\n}\r\nconst loadUser = () => async dispatch => {\r\n    if (localStorage.token) {\r\n        setAuthToken(localStorage.token);\r\n    }\r\n    try {\r\n        const response = await axios.get('/api/auth');\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: response.data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        })\r\n    }\r\n}\r\nconst logout = () => async dispatch => {\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    })\r\n    dispatch({\r\n        type: LOGOUT\r\n    })\r\n}\r\n\r\nexport { register, loadUser, login, logout };","E:\\nodejsproject\\client\\src\\reducers\\auth.js",[],"E:\\nodejsproject\\client\\src\\utills\\setAuthToken.js",[],"E:\\nodejsproject\\client\\src\\components\\dashboard\\Dashboard.js",["102"],"import React,{Fragment, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {getCurrentProfile} from '../../actions/profile'\r\nimport Spinner from '../layouts/Spinner'\r\nconst Dashboard = ({getCurrentProfile,profile:{profile,loading},auth}) => {\r\n    useEffect(() => {\r\n        getCurrentProfile()\r\n    }, [])\r\n    return loading && profile==null?(<Spinner/>):(\r\n    <Fragment>\r\n        <h1 className=\"large text-primary\">Dashboard</h1>\r\n        <p className=\"lead\">        \r\n            <i className=\"fas fa-user\">Welcome {auth && auth.user.name}</i>\r\n        </p>\r\n        {profile!==null ? \r\n            (<Fragment>has</Fragment>)\r\n            :\r\n            (<Fragment>\r\n                There is no profile setup yet. Please add some info.\r\n                <p>\r\n                <Link to=\"create-profile\" className=\"btn btn-primary my-1\">Create Profile</Link>\r\n                </p>\r\n            </Fragment>)}\r\n\r\n    </Fragment>\r\n    );\r\n}\r\nconst mapStateToProps =state => ({\r\n    auth:state.auth,\r\n    profile: state.profile\r\n})\r\nexport default connect(mapStateToProps,{getCurrentProfile})(Dashboard)\r\n","E:\\nodejsproject\\client\\src\\components\\routing\\PrivateRoute.js",[],"E:\\nodejsproject\\client\\src\\reducers\\profile.js",[],"E:\\nodejsproject\\client\\src\\actions\\profile.js",["103"],"import axios from 'axios';\r\nimport setAlert from './alert';\r\nimport { GET_PROFILE, PROFILE_ERROR } from './types'\r\n\r\n//get current users profile\r\n\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile/me')\r\n        console.log(res);\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { message: error.response.statusText, status: error.response.status }\r\n        })\r\n    }\r\n}","E:\\nodejsproject\\client\\src\\components\\layouts\\Spinner.js",[],"E:\\nodejsproject\\client\\src\\components\\profile-files\\CreateProfile.js",["104","105"],"import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nconst CreateProfile = ({ auth, profile }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    status: \"\",\r\n    skills: \"\",\r\n    githubusername: \"\",\r\n    bio: \"\",\r\n    facebook: \"\",\r\n    twitter: \"\",\r\n    linkedin: \"\",\r\n    youtube: \"\",\r\n    instagram: \"\",\r\n  });\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    youtube,\r\n    facebook,\r\n    twitter,\r\n    linkedin,\r\n    instagram,\r\n  } = formData;\r\n  const onChangeForm = (event) =>{\r\n      const {name, value} = event.target;\r\n      setFormData({...formData, [name]:value})\r\n      console.log(formData)\r\n\r\n  }\r\n  const submitForm = (e) =>{\r\n      const {name,value} = e.target\r\n      e.preventDefault();\r\n  }\r\n  return (\r\n    <div>\r\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={(e) =>submitForm(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={(event)=>onChangeForm(event)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={(event)=>onChangeForm(event)}/>\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={(event)=>onChangeForm(event)}/>\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={(event)=>onChangeForm(event)}/>\r\n          <small className=\"form-text\">\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={(event)=>onChangeForm(event)}/>\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername} onChange={(event)=>onChangeForm(event)}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={(event)=>onChangeForm(event)}></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        {displaySocialInputs ? (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\"></i>\r\n              <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={(event)=>onChangeForm(event)}/>\r\n            </div>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\"></i>\r\n              <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={(event)=>onChangeForm(event)}/>\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\"></i>\r\n              <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={(event)=>onChangeForm(event)}/>\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\"></i>\r\n              <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={(event)=>onChangeForm(event)}/>\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\"></i>\r\n              <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={(event)=>onChangeForm(event)}/>\r\n            </div>\r\n          </Fragment>\r\n        ) : null}\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <a className=\"btn btn-light my-1\" href=\"dashboard.html\">\r\n          Go Back\r\n        </a>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\nexport default connect(mapStateToProps)(CreateProfile);\r\n",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":35,"nodeType":"112","messageId":"113","endLine":1,"endColumn":50},{"ruleId":"110","severity":1,"message":"114","line":1,"column":52,"nodeType":"112","messageId":"113","endLine":1,"endColumn":68},{"ruleId":"106","severity":1,"message":"115","line":4,"column":16,"nodeType":"112","messageId":"116","endLine":4,"endColumn":21},{"ruleId":"110","severity":1,"message":"117","line":1,"column":122,"nodeType":"112","messageId":"113","endLine":1,"endColumn":133},{"ruleId":"118","severity":1,"message":"119","line":9,"column":8,"nodeType":"120","endLine":9,"endColumn":10,"suggestions":"121"},{"ruleId":"110","severity":1,"message":"122","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":16},{"ruleId":"110","severity":1,"message":"123","line":40,"column":14,"nodeType":"112","messageId":"113","endLine":40,"endColumn":18},{"ruleId":"110","severity":1,"message":"124","line":40,"column":19,"nodeType":"112","messageId":"113","endLine":40,"endColumn":24},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'REGISTER_FAILED' is defined but never used.","Identifier","unusedVar","'REGISTER_SUCCESS' is defined but never used.","Read-only global 'alert' should not be modified.","nativeReassign","'GET_PROFILE' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["127"],"'setAlert' is defined but never used.","'name' is assigned a value but never used.","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"130","text":"131"},[362,364],"[getCurrentProfile]"]